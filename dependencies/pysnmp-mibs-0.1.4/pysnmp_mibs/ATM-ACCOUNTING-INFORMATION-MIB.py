# PySNMP SMI module. Autogenerated from smidump -f python ATM-ACCOUNTING-INFORMATION-MIB
# by libsmi2pysnmp-0.1.3 at Mon Apr  2 20:38:43 2012,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( AtmAddr, ) = mibBuilder.importSymbols("ATM-TC-MIB", "AtmAddr")
( Bits, Counter64, Integer32, Integer32, ModuleIdentity, MibIdentifier, ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "mib-2")
( DateAndTime, DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString")

# Objects

atmAccountingInformationMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 59)).setRevisions(("1996-11-05 20:00",))
if mibBuilder.loadTexts: atmAccountingInformationMIB.setOrganization("IETF AToM MIB Working Group")
if mibBuilder.loadTexts: atmAccountingInformationMIB.setContactInfo("\nKeith McCloghrie\nCisco Systems, Inc.\n170 West Tasman Drive,\nSan Jose CA 95134-1706.\nPhone: +1 408 526 5260\nEmail: kzm@cisco.com")
if mibBuilder.loadTexts: atmAccountingInformationMIB.setDescription("The MIB module for identifying items of accounting\ninformation which are applicable to ATM connections.")
atmAcctngMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 59, 1))
atmAcctngDataObjects = ObjectIdentity((1, 3, 6, 1, 2, 1, 59, 1, 1))
if mibBuilder.loadTexts: atmAcctngDataObjects.setDescription("This identifier defines a subtree under which various\nobjects are defined such that a set of objects to be\ncollected as ATM accounting data can be specified as a\n(subtree, list) tuple using this identifier as the subtree.")
atmAcctngConnectionType = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 1), Integer().subtype(subtypeSpec=SingleValueConstraint(2,7,8,3,10,5,4,1,9,6,)).subtype(namedValues=NamedValues(("pvc", 1), ("spvpTarget", 10), ("pvp", 2), ("svcIncoming", 3), ("svcOutgoing", 4), ("svpIncoming", 5), ("svpOutgoing", 6), ("spvcInitiator", 7), ("spvcTarget", 8), ("spvpInitiator", 9), ))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngConnectionType.setDescription("The type of connection.")
atmAcctngCastType = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 2), Integer().subtype(subtypeSpec=SingleValueConstraint(1,2,)).subtype(namedValues=NamedValues(("p2p", 1), ("p2mp", 2), ))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngCastType.setDescription("An indication of whether the connection is point-to-point\nor point-to-multipoint.")
atmAcctngIfName = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 3), DisplayString()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngIfName.setDescription("A textual name for the interface on which the data for the\nconnection was collected.  If the local SNMP agent supports\nthe object ifName, the value of this object must be\nidentical to that of ifName in the conceptual row of the\nifTable corresponding to this interface.")
atmAcctngIfAlias = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 4), DisplayString()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngIfAlias.setDescription("The 'alias' name for the interface as specified by a\nnetwork manager, e.g., via a management set operation to\nmodify the relevant instance of the ifAlias object.  Note\nthat in contrast to ifIndex, ifAlias provides a non-volatile\n'handle' for the interface, the value of which is retained\nacross agent reboots.")
atmAcctngVpi = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 5), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngVpi.setDescription("The VPI used for the connection.")
atmAcctngVci = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 65535))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngVci.setDescription("The VCI used for the connection.")
atmAcctngCallingParty = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 7), AtmAddr()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngCallingParty.setDescription("The connection's calling party.  If unknown (e.g., for a\nPVC), then the value of this object is the zero-length\nstring.")
atmAcctngCalledParty = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 8), AtmAddr()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngCalledParty.setDescription("The connection's called party.  If unknown (e.g., for a\nPVC), then the value of this object is the zero-length\nstring.")
atmAcctngCallReference = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 9), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 3))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngCallReference.setDescription("The connection's call reference value (e.g., from Q.2931).\nIf unknown (e.g., for a PVC), then the value of this object\nis the zero-length string.")
atmAcctngStartTime = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 10), DateAndTime()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngStartTime.setDescription("The time when the connection was established.")
atmAcctngCollectionTime = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 11), DateAndTime()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngCollectionTime.setDescription("The time at which the data in this record was collected.")
atmAcctngCollectMode = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 12), Integer().subtype(subtypeSpec=SingleValueConstraint(1,2,3,)).subtype(namedValues=NamedValues(("onRelease", 1), ("periodically", 2), ("onCommand", 3), ))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngCollectMode.setDescription("The reason why this connection data was collected.")
atmAcctngReleaseCause = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 13), Integer32()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngReleaseCause.setDescription("If the connection data was collected because of the release\nof an SVC, then this is the cause code in the Release\nmessage for the connection; otherwise, this object has the\nvalue zero.")
atmAcctngServiceCategory = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 14), Integer().subtype(subtypeSpec=SingleValueConstraint(2,5,1,6,7,4,3,)).subtype(namedValues=NamedValues(("other", 1), ("cbr", 2), ("vbrRt", 3), ("vbrNrt", 4), ("abr", 5), ("ubr", 6), ("unknown", 7), ))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngServiceCategory.setDescription("The connection's service category.")
atmAcctngTransmittedCells = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 15), Counter64()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngTransmittedCells.setDescription("The number of cells, including OAM cells, transmitted by\nthis switch on this connection.")
atmAcctngTransmittedClp0Cells = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 16), Counter64()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngTransmittedClp0Cells.setDescription("The number of cells with CLP=0, including OAM cells,\ntransmitted by this switch on this connection.")
atmAcctngReceivedCells = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 17), Counter64()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngReceivedCells.setDescription("The number of cells, including OAM cells, received by this\nswitch on this connection.")
atmAcctngReceivedClp0Cells = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 18), Counter64()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngReceivedClp0Cells.setDescription("The number of cells with CLP=0, including OAM cells,\nreceived by this switch on this connection.")
atmAcctngTransmitTrafficDescriptorType = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 19), ObjectIdentifier()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngTransmitTrafficDescriptorType.setDescription("The traffic descriptor type (as defined in RFC 1695 and its\nsuccessors) in the direction in which the switch transmits\ncells on the connection.")
atmAcctngTransmitTrafficDescriptorParam1 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 20), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngTransmitTrafficDescriptorParam1.setDescription("The first traffic descriptor parameter in the direction in\nwhich this switch transmits cells on this connection.\nInterpretation of this parameter is dependent on the value\nof atmAcctngTransmitTrafficDescriptorType.")
atmAcctngTransmitTrafficDescriptorParam2 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 21), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngTransmitTrafficDescriptorParam2.setDescription("The second traffic descriptor parameter in the direction in\nwhich this switch transmits cells on this connection.\nInterpretation of this parameter is dependent on the value\nof atmAcctngTransmitTrafficDescriptorType.")
atmAcctngTransmitTrafficDescriptorParam3 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 22), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngTransmitTrafficDescriptorParam3.setDescription("The third traffic descriptor parameter in the direction in\nwhich this switch transmits cells on this connection.\nInterpretation of this parameter is dependent on the value\nof atmAcctngTransmitTrafficDescriptorType.")
atmAcctngTransmitTrafficDescriptorParam4 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 23), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngTransmitTrafficDescriptorParam4.setDescription("The fourth traffic descriptor parameter in the direction in\nwhich this switch transmits cells on this connection.\nInterpretation of this parameter is dependent on the value\nof atmAcctngTransmitTrafficDescriptorType.")
atmAcctngTransmitTrafficDescriptorParam5 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 24), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngTransmitTrafficDescriptorParam5.setDescription("The fifth traffic descriptor parameter in the direction in\nwhich this switch transmits cells on this connection.\nInterpretation of this parameter is dependent on the value\nof atmAcctngTransmitTrafficDescriptorType.")
atmAcctngReceiveTrafficDescriptorType = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 25), ObjectIdentifier()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngReceiveTrafficDescriptorType.setDescription("The traffic descriptor type (as defined in RFC 1695 and its\nsuccessors) in the direction in which this switch receives\ncells on this connection.")
atmAcctngReceiveTrafficDescriptorParam1 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 26), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngReceiveTrafficDescriptorParam1.setDescription("The first traffic descriptor parameter in the direction in\nwhich this switch receives cells on this connection.\nInterpretation of this parameter is dependent on the value\nof atmAcctngReceiveTrafficDescriptorType.")
atmAcctngReceiveTrafficDescriptorParam2 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 27), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngReceiveTrafficDescriptorParam2.setDescription("The second traffic descriptor parameter in the direction in\nwhich this switch receives cells on this connection.\nInterpretation of this parameter is dependent on the value\nof atmAcctngReceiveTrafficDescriptorType.")
atmAcctngReceiveTrafficDescriptorParam3 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 28), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngReceiveTrafficDescriptorParam3.setDescription("The third traffic descriptor parameter in the direction in\nwhich this switch receives cells on this connection.\nInterpretation of this parameter is dependent on the value\nof atmAcctngReceiveTrafficDescriptorType.")
atmAcctngReceiveTrafficDescriptorParam4 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 29), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngReceiveTrafficDescriptorParam4.setDescription("The fourth traffic descriptor parameter in the direction in\nwhich this switch receives cells on this connection.\nInterpretation of this parameter is dependent on the value\nof atmAcctngReceiveTrafficDescriptorType.")
atmAcctngReceiveTrafficDescriptorParam5 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 30), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 2147483647))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngReceiveTrafficDescriptorParam5.setDescription("The fifth traffic descriptor parameter in the direction in\nwhich this switch receives cells on this connection.\nInterpretation of this parameter is dependent on the value\nof atmAcctngReceiveTrafficDescriptorType.")
atmAcctngCallingPartySubAddress = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 31), AtmAddr()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngCallingPartySubAddress.setDescription("The connection's calling party sub-address.  If the\nconnection has no calling party sub-address, or it's value\nis unknown, then the value of this object is the zero-length\nstring.")
atmAcctngCalledPartySubAddress = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 32), AtmAddr()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngCalledPartySubAddress.setDescription("The connection's called party sub-address.  If the\nconnection has no called party sub-address, or it's value is\nunknown, then the value of this object is the zero-length\nstring.")
atmAcctngRecordCrc16 = MibScalar((1, 3, 6, 1, 2, 1, 59, 1, 1, 33), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("noaccess")
if mibBuilder.loadTexts: atmAcctngRecordCrc16.setDescription("The value of the CRC-16 checksum (as defined by ISO 3309\n(HDLC) and/or ITU X.25) calculated over the accounting\nrecord containing this object.\n\nWhile the mechanism for calculating/encoding the checksum\nvalue is specific to the method of encoding the accounting\nrecord, an accounting record containing this object is\ntypically generated by initializing the value of this object\nto the all-zeros string ('0000'H), with the location of\nthese zeros being saved.  After generating the record, the\nchecksum is calculated over the whole connection record and\nthen the all-zeros value is overwritten (at the saved\nlocation) by the calculated value of the checksum.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("ATM-ACCOUNTING-INFORMATION-MIB", PYSNMP_MODULE_ID=atmAccountingInformationMIB)

# Objects
mibBuilder.exportSymbols("ATM-ACCOUNTING-INFORMATION-MIB", atmAccountingInformationMIB=atmAccountingInformationMIB, atmAcctngMIBObjects=atmAcctngMIBObjects, atmAcctngDataObjects=atmAcctngDataObjects, atmAcctngConnectionType=atmAcctngConnectionType, atmAcctngCastType=atmAcctngCastType, atmAcctngIfName=atmAcctngIfName, atmAcctngIfAlias=atmAcctngIfAlias, atmAcctngVpi=atmAcctngVpi, atmAcctngVci=atmAcctngVci, atmAcctngCallingParty=atmAcctngCallingParty, atmAcctngCalledParty=atmAcctngCalledParty, atmAcctngCallReference=atmAcctngCallReference, atmAcctngStartTime=atmAcctngStartTime, atmAcctngCollectionTime=atmAcctngCollectionTime, atmAcctngCollectMode=atmAcctngCollectMode, atmAcctngReleaseCause=atmAcctngReleaseCause, atmAcctngServiceCategory=atmAcctngServiceCategory, atmAcctngTransmittedCells=atmAcctngTransmittedCells, atmAcctngTransmittedClp0Cells=atmAcctngTransmittedClp0Cells, atmAcctngReceivedCells=atmAcctngReceivedCells, atmAcctngReceivedClp0Cells=atmAcctngReceivedClp0Cells, atmAcctngTransmitTrafficDescriptorType=atmAcctngTransmitTrafficDescriptorType, atmAcctngTransmitTrafficDescriptorParam1=atmAcctngTransmitTrafficDescriptorParam1, atmAcctngTransmitTrafficDescriptorParam2=atmAcctngTransmitTrafficDescriptorParam2, atmAcctngTransmitTrafficDescriptorParam3=atmAcctngTransmitTrafficDescriptorParam3, atmAcctngTransmitTrafficDescriptorParam4=atmAcctngTransmitTrafficDescriptorParam4, atmAcctngTransmitTrafficDescriptorParam5=atmAcctngTransmitTrafficDescriptorParam5, atmAcctngReceiveTrafficDescriptorType=atmAcctngReceiveTrafficDescriptorType, atmAcctngReceiveTrafficDescriptorParam1=atmAcctngReceiveTrafficDescriptorParam1, atmAcctngReceiveTrafficDescriptorParam2=atmAcctngReceiveTrafficDescriptorParam2, atmAcctngReceiveTrafficDescriptorParam3=atmAcctngReceiveTrafficDescriptorParam3, atmAcctngReceiveTrafficDescriptorParam4=atmAcctngReceiveTrafficDescriptorParam4, atmAcctngReceiveTrafficDescriptorParam5=atmAcctngReceiveTrafficDescriptorParam5, atmAcctngCallingPartySubAddress=atmAcctngCallingPartySubAddress, atmAcctngCalledPartySubAddress=atmAcctngCalledPartySubAddress, atmAcctngRecordCrc16=atmAcctngRecordCrc16)

