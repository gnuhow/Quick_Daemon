# PySNMP SMI module. Autogenerated from smidump -f python VPN-TC-STD-MIB
# by libsmi2pysnmp-0.1.3 at Mon Apr  2 20:39:49 2012,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( Bits, Integer32, ModuleIdentity, MibIdentifier, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "TimeTicks", "mib-2")
( TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention")

# Types

class VPNId(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(7,7)
    fixedLength = 7
    
class VPNIdOrZero(OctetString):
    subtypeSpec = OctetString.subtypeSpec+ConstraintsUnion(ValueSizeConstraint(0,0),ValueSizeConstraint(7,7),)
    

# Objects

vpnTcMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 129)).setRevisions(("2005-11-15 00:00",))
if mibBuilder.loadTexts: vpnTcMIB.setOrganization("Layer 3 Virtual Private Networks (L3VPN) Working Group.")
if mibBuilder.loadTexts: vpnTcMIB.setContactInfo("Benson Schliesser\nbensons@savvis.net\n\nThomas D. Nadeau\ntnadeau@cisco.com\n\nThis TC MIB is a product of the PPVPN\nhttp://www.ietf.org/html.charters/ppvpn-charter.html\nand subsequently the L3VPN\nhttp://www.ietf.org/html.charters/l3vpn-charter.html\nworking groups.\n\nComments and discussion should be directed to\nl3vpn@ietf.org")
if mibBuilder.loadTexts: vpnTcMIB.setDescription("This MIB contains TCs for VPNs.\n\nCopyright (C) The Internet Society (2005).  This version\nof this MIB module is part of RFC 4265;  see the RFC\nitself for full legal notices.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("VPN-TC-STD-MIB", PYSNMP_MODULE_ID=vpnTcMIB)

# Types
mibBuilder.exportSymbols("VPN-TC-STD-MIB", VPNId=VPNId, VPNIdOrZero=VPNIdOrZero)

# Objects
mibBuilder.exportSymbols("VPN-TC-STD-MIB", vpnTcMIB=vpnTcMIB)

