# PySNMP SMI module. Autogenerated from smidump -f python VDSL-LINE-EXT-SCM-MIB
# by libsmi2pysnmp-0.1.3 at Mon Apr  2 20:39:48 2012,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( ifIndex, ) = mibBuilder.importSymbols("IF-MIB", "ifIndex")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, transmission, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "transmission")
( RowStatus, TextualConvention, TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TruthValue")
( vdslLineConfProfileName, ) = mibBuilder.importSymbols("VDSL-LINE-MIB", "vdslLineConfProfileName")

# Types

class VdslSCMBandId(Integer):
    subtypeSpec = Integer.subtypeSpec+SingleValueConstraint(7,6,1,4,5,2,3,)
    namedValues = NamedValues(("optionalBand", 1), ("firstDownstreamBand", 2), ("firstUpstreamBand", 3), ("secondDownstreamBand", 4), ("secondUpstreamBand", 5), ("thirdDownstreamBand", 6), ("thirdUpstreamBand", 7), )
    

# Objects

vdslExtSCMMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 228)).setRevisions(("2005-04-28 00:00",))
if mibBuilder.loadTexts: vdslExtSCMMIB.setOrganization("ADSLMIB Working Group")
if mibBuilder.loadTexts: vdslExtSCMMIB.setContactInfo("WG-email:  adslmib@ietf.org\nInfo:      https://www1.ietf.org/mailman/listinfo/adslmib\n\nChair:     Mike Sneed\n           Sand Channel Systems\nPostal:    P.O. Box 37324\n           Raleigh NC 27627-732\nEmail:     sneedmike@hotmail.com\nPhone:     +1 206 600 7022\n\nCo-Chair/Co-editor:\n           Bob Ray\n           PESA Switching Systems, Inc.\nPostal:    330-A Wynn Drive\n           Huntsville, AL 35805\n           USA\nEmail:     rray@pesa.com\nPhone:     +1 256 726 9200 ext.  142\n\n\n\nCo-editor: Menachem Dodge\n           ECI Telecom Ltd.\nPostal:    30 Hasivim St.\n           Petach Tikva 49517,\n           Israel\nEmail:     mbdodge@ieee.org\nPhone:     +972 3 926 8421")
if mibBuilder.loadTexts: vdslExtSCMMIB.setDescription("The VDSL-LINE-MIB found in RFC 3728 defines objects for the\nmanagement of a pair of VDSL transceivers at each end of the VDSL\nline.  The VDSL-LINE-MIB configures and monitors the line code\nindependent parameters (TC layer) of the VDSL line.  This MIB\nmodule is an optional extension of the VDSL-LINE-MIB and defines\nobjects for configuration and monitoring of the line code specific\n(LCS) elements (PMD layer) for VDSL lines using SCM coding.  The\nobjects in this extension MIB MUST NOT be used for VDSL lines\nusing Multiple Carrier Modulation (MCM) line coding.  If an object\nin this extension MIB is referenced by a line which does not use\nSCM, it has no effect on the operation of that line.\n\nNaming Conventions:\n\n   Vtuc -- VDSL transceiver at near (Central) end of line\n   Vtur -- VDSL transceiver at Remote end of line\n   Vtu  -- One of either Vtuc or Vtur\n   Curr -- Current\n   Atn  -- Attenuation\n   LCS  -- Line Code Specific\n   Max  -- Maximum\n   Mgn  -- Margin\n   PSD  -- Power Spectral Density\n   Rx   -- Receive\n   Snr  -- Signal to Noise Ratio\n   Tx   -- Transmit\n\nCopyright (C) The Internet Society (2005).  This version\nof this MIB module is part of RFC 4069: see the RFC\nitself for full legal notices.")
vdslLineExtSCMMib = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 228, 1))
vdslLineExtSCMMibObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 228, 1, 1))
vdslLineSCMConfProfileBandTable = MibTable((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1))
if mibBuilder.loadTexts: vdslLineSCMConfProfileBandTable.setDescription("This table contains transmit band descriptor configuration\ninformation for a VDSL line.  Each entry in this table\nreflects the configuration for one of possibly many bands\nof a single carrier modulation (SCM) VDSL line.  For each\nprofile which is associated with a VDSL line using SCM\nline coding, five entries in this table will exist, one for\neach of the five bands.  Bands which are not in use will be\nmarked as unused.  These entries are defined by a manager\nand can be used to configure the VDSL line.  If an entry in\n\n\n\n\n\nthis table is referenced by a line which does not use SCM,\nit has no effect on the operation of that line.")
vdslLineSCMConfProfileBandEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1)).setIndexNames((0, "VDSL-LINE-MIB", "vdslLineConfProfileName"), (0, "VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMConfProfileBandId"))
if mibBuilder.loadTexts: vdslLineSCMConfProfileBandEntry.setDescription("Each entry consists of a list of parameters that\nrepresents the configuration of a single carrier\nmodulation VDSL modem transmit band.\n\nA default profile with an index of 'DEFVAL', will\nalways exist and its parameters will be set to vendor\nspecific values, unless otherwise specified in this\ndocument.\n\nAll read-create objects defined in this MIB module SHOULD be\nstored persistently.")
vdslLineSCMConfProfileBandId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 1), VdslSCMBandId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: vdslLineSCMConfProfileBandId.setDescription("The BandId for this entry, which specifies which band\nis being referred to.")
vdslLineSCMConfProfileBandInUse = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineSCMConfProfileBandInUse.setDescription("Indicates whether this band is in use.\nIf set to True this band is in use.")
vdslLineSCMConfProfileBandCenterFrequency = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 3), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineSCMConfProfileBandCenterFrequency.setDescription("Specifies the center frequency in Hz")
vdslLineSCMConfProfileBandSymbolRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineSCMConfProfileBandSymbolRate.setDescription("The requested symbol rate in baud.")
vdslLineSCMConfProfileBandConstellationSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineSCMConfProfileBandConstellationSize.setDescription("Specifies the constellation size.")
vdslLineSCMConfProfileBandTransmitPSDLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineSCMConfProfileBandTransmitPSDLevel.setDescription("The requested transmit power spectral density for the VDSL\nmodem.  The Actual value in -0.25 dBm/Hz.")
vdslLineSCMConfProfileBandRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 1, 1, 7), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: vdslLineSCMConfProfileBandRowStatus.setDescription("This object is used to create a new row or modify or\ndelete an existing row in this table.\n\nA profile activated by setting this object to `active'.\nWhen `active' is set, the system will validate the profile.\n\nNone of the columns in this row may be modified while the\nrow is in the `active' state.\n\nBefore a profile can be deleted or taken out of\nservice, (by setting this object to `destroy' or\n`notInService') it must be first unreferenced\nfrom all associated lines.")
vdslLineSCMPhysBandTable = MibTable((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2))
if mibBuilder.loadTexts: vdslLineSCMPhysBandTable.setDescription("This table provides one row for each SCM Vtu band.  This\ntable is read only as it reflects the current physical\nparameters of each band.  For each ifIndex which is\nassociated with a VDSL line using SCM line coding, five\nentries in this table will exist, one for each of the\nfive bands.  Bands which are not in use will be marked\nas unused.")
vdslLineSCMPhysBandEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1)).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMPhysBandId"))
if mibBuilder.loadTexts: vdslLineSCMPhysBandEntry.setDescription("An entry in the vdslLineSCMPhysBandTable.")
vdslLineSCMPhysBandId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 1), VdslSCMBandId()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: vdslLineSCMPhysBandId.setDescription("The BandId for this entry, which specifies which band\nis being referred to.")
vdslLineSCMPhysBandInUse = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 2), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslLineSCMPhysBandInUse.setDescription("Indicates whether this band is in use.\nIf set to True this band is in use.")
vdslLineSCMPhysBandCurrCenterFrequency = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslLineSCMPhysBandCurrCenterFrequency.setDescription("The current center frequency in Hz for this band.")
vdslLineSCMPhysBandCurrSymbolRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslLineSCMPhysBandCurrSymbolRate.setDescription("The current value of the symbol rate in baud for this\nband.")
vdslLineSCMPhysBandCurrConstellationSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslLineSCMPhysBandCurrConstellationSize.setDescription("The current constellation size on this band.")
vdslLineSCMPhysBandCurrPSDLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslLineSCMPhysBandCurrPSDLevel.setDescription("The transmit power spectral density for the\nVDSL modem.")
vdslLineSCMPhysBandCurrSnrMgn = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 7), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslLineSCMPhysBandCurrSnrMgn.setDescription("Noise margin as seen by this Vtu and band with respect\nto its received signal in 0.25 dB.")
vdslLineSCMPhysBandCurrAtn = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 228, 1, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: vdslLineSCMPhysBandCurrAtn.setDescription("Measured difference in the total power transmitted by\nthe peer Vtu on this band and the total power received\nby this Vtu on this band in 0.25 dB.")
vdslLineExtSCMConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 228, 1, 2))
vdslLineExtSCMGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 228, 1, 2, 1))
vdslLineExtSCMCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 228, 1, 2, 2))

# Augmentions

# Groups

vdslLineExtSCMGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 228, 1, 2, 1, 1)).setObjects(*(("VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMPhysBandCurrConstellationSize"), ("VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMPhysBandCurrSnrMgn"), ("VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMPhysBandInUse"), ("VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMPhysBandCurrCenterFrequency"), ("VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMPhysBandCurrSymbolRate"), ("VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMPhysBandCurrPSDLevel"), ("VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMConfProfileBandRowStatus"), ("VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMPhysBandCurrAtn"), ("VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMConfProfileBandConstellationSize"), ("VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMConfProfileBandSymbolRate"), ("VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMConfProfileBandCenterFrequency"), ("VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMConfProfileBandInUse"), ("VDSL-LINE-EXT-SCM-MIB", "vdslLineSCMConfProfileBandTransmitPSDLevel"), ) )
if mibBuilder.loadTexts: vdslLineExtSCMGroup.setDescription("A collection of objects providing configuration\ninformation for a VDSL line based upon single carrier\nmodulation modem.")

# Compliances

vdslLineExtSCMMibCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 10, 228, 1, 2, 2, 1)).setObjects(*(("VDSL-LINE-EXT-SCM-MIB", "vdslLineExtSCMGroup"), ) )
if mibBuilder.loadTexts: vdslLineExtSCMMibCompliance.setDescription("The compliance statement for SNMP entities which\nmanage VDSL interfaces.")

# Exports

# Module identity
mibBuilder.exportSymbols("VDSL-LINE-EXT-SCM-MIB", PYSNMP_MODULE_ID=vdslExtSCMMIB)

# Types
mibBuilder.exportSymbols("VDSL-LINE-EXT-SCM-MIB", VdslSCMBandId=VdslSCMBandId)

# Objects
mibBuilder.exportSymbols("VDSL-LINE-EXT-SCM-MIB", vdslExtSCMMIB=vdslExtSCMMIB, vdslLineExtSCMMib=vdslLineExtSCMMib, vdslLineExtSCMMibObjects=vdslLineExtSCMMibObjects, vdslLineSCMConfProfileBandTable=vdslLineSCMConfProfileBandTable, vdslLineSCMConfProfileBandEntry=vdslLineSCMConfProfileBandEntry, vdslLineSCMConfProfileBandId=vdslLineSCMConfProfileBandId, vdslLineSCMConfProfileBandInUse=vdslLineSCMConfProfileBandInUse, vdslLineSCMConfProfileBandCenterFrequency=vdslLineSCMConfProfileBandCenterFrequency, vdslLineSCMConfProfileBandSymbolRate=vdslLineSCMConfProfileBandSymbolRate, vdslLineSCMConfProfileBandConstellationSize=vdslLineSCMConfProfileBandConstellationSize, vdslLineSCMConfProfileBandTransmitPSDLevel=vdslLineSCMConfProfileBandTransmitPSDLevel, vdslLineSCMConfProfileBandRowStatus=vdslLineSCMConfProfileBandRowStatus, vdslLineSCMPhysBandTable=vdslLineSCMPhysBandTable, vdslLineSCMPhysBandEntry=vdslLineSCMPhysBandEntry, vdslLineSCMPhysBandId=vdslLineSCMPhysBandId, vdslLineSCMPhysBandInUse=vdslLineSCMPhysBandInUse, vdslLineSCMPhysBandCurrCenterFrequency=vdslLineSCMPhysBandCurrCenterFrequency, vdslLineSCMPhysBandCurrSymbolRate=vdslLineSCMPhysBandCurrSymbolRate, vdslLineSCMPhysBandCurrConstellationSize=vdslLineSCMPhysBandCurrConstellationSize, vdslLineSCMPhysBandCurrPSDLevel=vdslLineSCMPhysBandCurrPSDLevel, vdslLineSCMPhysBandCurrSnrMgn=vdslLineSCMPhysBandCurrSnrMgn, vdslLineSCMPhysBandCurrAtn=vdslLineSCMPhysBandCurrAtn, vdslLineExtSCMConformance=vdslLineExtSCMConformance, vdslLineExtSCMGroups=vdslLineExtSCMGroups, vdslLineExtSCMCompliances=vdslLineExtSCMCompliances)

# Groups
mibBuilder.exportSymbols("VDSL-LINE-EXT-SCM-MIB", vdslLineExtSCMGroup=vdslLineExtSCMGroup)

# Compliances
mibBuilder.exportSymbols("VDSL-LINE-EXT-SCM-MIB", vdslLineExtSCMMibCompliance=vdslLineExtSCMMibCompliance)
