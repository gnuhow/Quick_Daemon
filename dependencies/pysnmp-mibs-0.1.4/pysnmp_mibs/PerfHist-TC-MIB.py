# PySNMP SMI module. Autogenerated from smidump -f python PerfHist-TC-MIB
# by libsmi2pysnmp-0.1.3 at Mon Apr  2 20:39:25 2012,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( Bits, Gauge32, Integer32, ModuleIdentity, MibIdentifier, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "Integer32", "ModuleIdentity", "MibIdentifier", "TimeTicks", "mib-2")
( TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention")

# Types

class PerfCurrentCount(Gauge32):
    pass

class PerfIntervalCount(Gauge32):
    pass

class PerfTotalCount(Gauge32):
    pass


# Objects

perfHistTCMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 58)).setRevisions(("2003-08-13 00:00","1998-11-07 11:00",))
if mibBuilder.loadTexts: perfHistTCMIB.setOrganization("IETF AToM MIB WG")
if mibBuilder.loadTexts: perfHistTCMIB.setContactInfo("WG charter:\nhttp://www.ietf.org/html.charters/atommib-charter.html\n\nMailing Lists:\nGeneral Discussion: atommib@research.telcordia.com\nTo Subscribe: atommib-request@research.telcordia.com\n\nEditor:  Kaj Tesink\nPostal:  Telcordia Technologies\n       331 Newman Springs Road\n       Red Bank, NJ 07701\n       USA\nTel:     +1 732 758 5254\nE-mail:  kaj@research.telcordia.com")
if mibBuilder.loadTexts: perfHistTCMIB.setDescription("This MIB Module provides Textual Conventions\nto be used by systems supporting 15 minute\nbased performance history counts.\n\nCopyright (C) The Internet Society (2003).\nThis version of this MIB module is part of\nRFC 3593;  see the RFC itself for full\nlegal notices.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("PerfHist-TC-MIB", PYSNMP_MODULE_ID=perfHistTCMIB)

# Types
mibBuilder.exportSymbols("PerfHist-TC-MIB", PerfCurrentCount=PerfCurrentCount, PerfIntervalCount=PerfIntervalCount, PerfTotalCount=PerfTotalCount)

# Objects
mibBuilder.exportSymbols("PerfHist-TC-MIB", perfHistTCMIB=perfHistTCMIB)

