# PySNMP SMI module. Autogenerated from smidump -f python MTA-MIB
# by libsmi2pysnmp-0.1.3 at Mon Apr  2 20:39:22 2012,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( URLString, applIndex, ) = mibBuilder.importSymbols("NETWORK-SERVICES-MIB", "URLString", "applIndex")
( SnmpAdminString, ) = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Counter32, Gauge32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Gauge32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "mib-2")
( TimeInterval, ) = mibBuilder.importSymbols("SNMPv2-TC", "TimeInterval")

# Objects

mta = ModuleIdentity((1, 3, 6, 1, 2, 1, 28)).setRevisions(("2000-03-03 00:00","1999-05-12 00:00","1997-08-17 00:00","1993-11-28 00:00",))
if mibBuilder.loadTexts: mta.setOrganization("IETF Mail and Directory Management Working Group")
if mibBuilder.loadTexts: mta.setContactInfo("        Ned Freed\n\nPostal: Innosoft International, Inc.\n        1050 Lakes Drive\n        West Covina, CA 91790\n        US\n\nTel: +1 626 919 3600\nFax: +1 626 919 3614\n\nE-Mail: ned.freed@innosoft.com")
if mibBuilder.loadTexts: mta.setDescription("The MIB module describing Message Transfer Agents (MTAs)")
mtaTable = MibTable((1, 3, 6, 1, 2, 1, 28, 1))
if mibBuilder.loadTexts: mtaTable.setDescription("The table holding information specific to an MTA.")
mtaEntry = MibTableRow((1, 3, 6, 1, 2, 1, 28, 1, 1)).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"))
if mibBuilder.loadTexts: mtaEntry.setDescription("The entry associated with each MTA.")
mtaReceivedMessages = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaReceivedMessages.setDescription("The number of messages received since MTA initialization.\nThis includes messages transmitted to this MTA from other\nMTAs as well as messages that have been submitted to the\nMTA directly by end-users or applications.")
mtaStoredMessages = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 1, 1, 2), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaStoredMessages.setDescription("The total number of messages currently stored in the MTA.\nThis includes messages that are awaiting transmission to\nsome other MTA or are waiting for delivery to an end-user\nor application.")
mtaTransmittedMessages = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTransmittedMessages.setDescription("The number of messages transmitted since MTA initialization.\nThis includes messages that were transmitted to some other\nMTA or are waiting for delivery to an end-user or\napplication.")
mtaReceivedVolume = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaReceivedVolume.setDescription("The total volume of messages received since MTA\ninitialization, measured in kilo-octets.  This volume should\ninclude all transferred data that is logically above the mail\ntransport protocol level.  For example, an SMTP-based MTA\nshould use the number of kilo-octets in the message header\nand body, while an X.400-based MTA should use the number of\nkilo-octets of P2 data.  This includes messages transmitted\nto this MTA from other MTAs as well as messages that have\nbeen submitted to the MTA directly by end-users or\napplications.")
mtaStoredVolume = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 1, 1, 5), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaStoredVolume.setDescription("The total volume of messages currently stored in the MTA,\nmeasured in kilo-octets.  This volume should include all\nstored data that is logically above the mail transport\nprotocol level.  For example, an SMTP-based MTA should\nuse the number of kilo-octets in the message header and\nbody, while an X.400-based MTA would use the number of\nkilo-octets of P2 data.  This includes messages that are\nawaiting transmission to some other MTA or are waiting\nfor delivery to an end-user or application.")
mtaTransmittedVolume = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTransmittedVolume.setDescription("The total volume of messages transmitted since MTA\ninitialization, measured in kilo-octets.  This volume should\ninclude all transferred data that is logically above the mail\ntransport protocol level.  For example, an SMTP-based MTA\nshould use the number of kilo-octets in the message header\nand body, while an X.400-based MTA should use the number of\nkilo-octets of P2 data.  This includes messages that were\ntransmitted to some other MTA or are waiting for delivery\nto an end-user or application.")
mtaReceivedRecipients = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaReceivedRecipients.setDescription("The total number of recipients specified in all messages\nreceived since MTA initialization.  Recipients this MTA\nhas no responsibility for, i.e. inactive envelope\nrecipients or ones referred to in message headers,\nshould not be counted even if information about such\nrecipients is available.  This includes messages\ntransmitted to this MTA from other MTAs as well as\nmessages that have been submitted to the MTA directly\nby end-users or applications.")
mtaStoredRecipients = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 1, 1, 8), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaStoredRecipients.setDescription("The total number of recipients specified in all messages\ncurrently stored in the MTA.  Recipients this MTA has no\nresponsibility for, i.e. inactive envelope recipients or\nones referred to in message headers, should not be\ncounted.  This includes messages that are awaiting\ntransmission to some other MTA or are waiting for\ndelivery to an end-user or application.")
mtaTransmittedRecipients = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaTransmittedRecipients.setDescription("The total number of recipients specified in all messages\ntransmitted since MTA initialization.  Recipients this\nMTA had no responsibility for, i.e. inactive envelope\nrecipients or ones referred to in message headers,\nshould not be counted.  This includes messages that were\ntransmitted to some other MTA or are waiting for\ndelivery to an end-user or application.")
mtaSuccessfulConvertedMessages = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaSuccessfulConvertedMessages.setDescription("The number of messages that have been successfully\nconverted from one form to another since MTA\ninitialization.")
mtaFailedConvertedMessages = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaFailedConvertedMessages.setDescription("The number of messages for which an unsuccessful\nattempt was made to convert them from one form to\nanother since MTA initialization.")
mtaLoopsDetected = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaLoopsDetected.setDescription("A message loop is defined as a situation where the MTA\ndecides that a given message will never be delivered to\none or more recipients and instead will continue to\nloop endlessly through one or more MTAs.  This variable\ncounts the number of times the MTA has detected such a\nsituation since MTA initialization. Note that the\nmechanism MTAs use to detect loops (e.g., trace field\ncounting, count of references to this MTA in a trace\nfield, examination of DNS or other directory information,\netc.), the level at which loops are detected (e.g., per\nmessage, per recipient, per directory entry, etc.), and\nthe handling of a loop once it is detected (e.g., looping\nmessages are held, looping messages are bounced or sent\nto the postmaster, messages that the MTA knows will loop\nwon't be accepted, etc.) vary widely from one MTA to the\nnext and cannot be inferred from this variable.")
mtaGroupTable = MibTable((1, 3, 6, 1, 2, 1, 28, 2))
if mibBuilder.loadTexts: mtaGroupTable.setDescription("The table holding information specific to each MTA group.")
mtaGroupEntry = MibTableRow((1, 3, 6, 1, 2, 1, 28, 2, 1)).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"), (0, "MTA-MIB", "mtaGroupIndex"))
if mibBuilder.loadTexts: mtaGroupEntry.setDescription("The entry associated with each MTA group.")
mtaGroupIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: mtaGroupIndex.setDescription("The index associated with a group for a given MTA.")
mtaGroupReceivedMessages = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupReceivedMessages.setDescription("The number of messages received to this group since\ngroup creation.")
mtaGroupRejectedMessages = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupRejectedMessages.setDescription("The number of messages rejected by this group since\ngroup creation.")
mtaGroupStoredMessages = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 4), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupStoredMessages.setDescription("The total number of messages currently stored in this\ngroup's queue.")
mtaGroupTransmittedMessages = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupTransmittedMessages.setDescription("The number of messages transmitted by this group since\ngroup creation.")
mtaGroupReceivedVolume = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupReceivedVolume.setDescription("The total volume of messages received to this group since\ngroup creation, measured in kilo-octets.  This volume\nshould include all transferred data that is logically above\nthe mail transport protocol level.  For example, an\nSMTP-based MTA should use the number of kilo-octets in the\nmessage header and body, while an X.400-based MTA should use\nthe number of kilo-octets of P2 data.")
mtaGroupStoredVolume = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 7), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupStoredVolume.setDescription("The total volume of messages currently stored in this\ngroup's queue, measured in kilo-octets.  This volume should\ninclude all stored data that is logically above the mail\ntransport protocol level.  For example, an SMTP-based\nMTA should use the number of kilo-octets in the message\nheader and body, while an X.400-based MTA would use the\nnumber of kilo-octets of P2 data.")
mtaGroupTransmittedVolume = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupTransmittedVolume.setDescription("The total volume of messages transmitted by this group\nsince group creation, measured in kilo-octets.  This\nvolume should include all transferred data that is logically\nabove the mail transport protocol level.  For example, an\nSMTP-based MTA should use the number of kilo-octets in the\nmessage header and body, while an X.400-based MTA should use\nthe number of kilo-octets of P2 data.")
mtaGroupReceivedRecipients = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupReceivedRecipients.setDescription("The total number of recipients specified in all messages\nreceived to this group since group creation.\nRecipients this MTA has no responsibility for should not\nbe counted.")
mtaGroupStoredRecipients = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 10), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupStoredRecipients.setDescription("The total number of recipients specified in all messages\ncurrently stored in this group's queue.  Recipients this\nMTA has no responsibility for should not be counted.")
mtaGroupTransmittedRecipients = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupTransmittedRecipients.setDescription("The total number of recipients specified in all messages\ntransmitted by this group since group creation.\nRecipients this MTA had no responsibility for should not\nbe counted.")
mtaGroupOldestMessageStored = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 12), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupOldestMessageStored.setDescription("Time since the oldest message in this group's queue was\nplaced in the queue.")
mtaGroupInboundAssociations = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupInboundAssociations.setDescription("The number of current associations to the group, where the\ngroup is the responder.")
mtaGroupOutboundAssociations = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 14), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupOutboundAssociations.setDescription("The number of current associations to the group, where the\ngroup is the initiator.")
mtaGroupAccumulatedInboundAssociations = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupAccumulatedInboundAssociations.setDescription("The total number of associations to the group since\ngroup creation, where the MTA was the responder.")
mtaGroupAccumulatedOutboundAssociations = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupAccumulatedOutboundAssociations.setDescription("The total number of associations from the group since\ngroup creation, where the MTA was the initiator.")
mtaGroupLastInboundActivity = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 17), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupLastInboundActivity.setDescription("Time since the last time that this group had an active\ninbound association for purposes of message reception.")
mtaGroupLastOutboundActivity = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 18), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupLastOutboundActivity.setDescription("Time since the last time that this group had a\nsuccessful outbound association for purposes of\nmessage delivery.")
mtaGroupRejectedInboundAssociations = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupRejectedInboundAssociations.setDescription("The total number of inbound associations the group has\nrejected, since group creation.  Rejected associations\nare not counted in the accumulated association totals.")
mtaGroupFailedOutboundAssociations = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupFailedOutboundAssociations.setDescription("The total number associations where the group was the\ninitiator and association establishment has failed,\nsince group creation.  Failed associations are\nnot counted in the accumulated association totals.")
mtaGroupInboundRejectionReason = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 21), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupInboundRejectionReason.setDescription("The failure reason, if any, for the last association this\ngroup refused to respond to. If no association attempt\nhas been made since the MTA was initialized the value\nshould be 'never'.")
mtaGroupOutboundConnectFailureReason = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 22), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupOutboundConnectFailureReason.setDescription("The failure reason, if any, for the last association attempt\nthis group initiated. If no association attempt has been\nmade since the MTA was initialized the value should be\n'never'.")
mtaGroupScheduledRetry = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 23), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupScheduledRetry.setDescription("The amount of time until this group is next scheduled to\nattempt to make an association.")
mtaGroupMailProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 24), ObjectIdentifier()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupMailProtocol.setDescription("An identification of the protocol being used by this group.\nFor an group employing OSI protocols, this will be the\nApplication Context.    For Internet applications, OID\nvalues of the form {applTCPProtoID port} or {applUDPProtoID\nport} are used for TCP-based and UDP-based protocols,\nrespectively. In either case 'port' corresponds to the\nprimary port number being used by the protocol. The\nusual IANA procedures may be used to register ports for\nnew protocols. applTCPProtoID and applUDPProtoID are\ndefined in the NETWORK-SERVICES-MIB, RFC 2788.")
mtaGroupName = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 25), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupName.setDescription("A descriptive name for the group. If this group connects to\na single remote MTA this should be the name of that MTA. If\nthis in turn is an Internet MTA this should be the domain\nname.  For an OSI MTA it should be the string encoded\ndistinguished name of the managed object using the format\ndefined in RFC 2253.  For X.400(1984) MTAs which do not\nhave a Distinguished Name, the RFC 2156 syntax\n'mta in globalid' used in X400-Received: fields can be\nused.")
mtaGroupSuccessfulConvertedMessages = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 26), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupSuccessfulConvertedMessages.setDescription("The number of messages that have been successfully\nconverted from one form to another in this group\nsince group creation.")
mtaGroupFailedConvertedMessages = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 27), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupFailedConvertedMessages.setDescription("The number of messages for which an unsuccessful\nattempt was made to convert them from one form to\nanother in this group since group creation.")
mtaGroupDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 28), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupDescription.setDescription("A description of the group's purpose.  This information is\nintended to identify the group in a status display.")
mtaGroupURL = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 29), URLString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupURL.setDescription("A URL pointing to a description of the group.  This\ninformation is intended to identify and briefly describe\nthe group in a status display.")
mtaGroupCreationTime = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 30), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupCreationTime.setDescription("Time since this group was first created.")
mtaGroupHierarchy = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 31), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-2147483648, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupHierarchy.setDescription("Describes how this group fits into the hierarchy. A\npositive value is interpreted as an mtaGroupIndex\nvalue for some other group whose variables include\nthose of this group (and usually others). A negative\nvalue is interpreted as a group collection code: Groups\nwith common negative hierarchy values comprise one\nparticular breakdown of MTA activity as a whole. A\nzero value means that this MIB implementation doesn't\nimplement hierarchy indicators and thus the overall\ngroup hierarchy cannot be determined.")
mtaGroupOldestMessageId = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 32), SnmpAdminString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupOldestMessageId.setDescription("Message ID of the oldest message in the group's queue.\nWhenever possible this should be in the form of an\nRFC 822 msg-id; X.400 may convert X.400 message\nidentifiers to this form by following the rules laid\nout in RFC2156.")
mtaGroupLoopsDetected = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 33), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupLoopsDetected.setDescription("A message loop is defined as a situation where the MTA\ndecides that a given message will never be delivered to\none or more recipients and instead will continue to\nloop endlessly through one or more MTAs.  This variable\ncounts the number of times the MTA has detected such a\nsituation in conjunction with something associated with\nthis group since group creation.  Note that the\nmechanism MTAs use to detect loops (e.g., trace field\ncounting, count of references to this MTA in a trace\nfield, examination of DNS or other directory information,\netc.), the level at which loops are detected (e.g., per\nmessage, per recipient, per directory entry, etc.), and\nthe handling of a loop once it is detected (e.g., looping\nmessages are held, looping messages are bounced or sent\nto the postmaster, messages that the MTA knows will loop\nwon't be accepted, etc.) vary widely from one MTA to the\nnext and cannot be inferred from this variable.")
mtaGroupLastOutboundAssociationAttempt = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 2, 1, 34), TimeInterval()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupLastOutboundAssociationAttempt.setDescription("Time since the last time that this group attempted\nto make an outbound association for purposes of\nmessage delivery.")
mtaGroupAssociationTable = MibTable((1, 3, 6, 1, 2, 1, 28, 3))
if mibBuilder.loadTexts: mtaGroupAssociationTable.setDescription("The table holding information regarding the associations\nfor each MTA group.")
mtaGroupAssociationEntry = MibTableRow((1, 3, 6, 1, 2, 1, 28, 3, 1)).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"), (0, "MTA-MIB", "mtaGroupIndex"), (0, "MTA-MIB", "mtaGroupAssociationIndex"))
if mibBuilder.loadTexts: mtaGroupAssociationEntry.setDescription("The entry holding information regarding the associations\nfor each MTA group.")
mtaGroupAssociationIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 3, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupAssociationIndex.setDescription("Reference into association table to allow correlation of\nthis group's active associations with the association table.")
mtaConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 28, 4))
mtaGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 28, 4, 1))
mtaCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 28, 4, 2))
mtaGroupErrorTable = MibTable((1, 3, 6, 1, 2, 1, 28, 5))
if mibBuilder.loadTexts: mtaGroupErrorTable.setDescription("The table holding information regarding accumulated errors\nfor each MTA group.")
mtaGroupErrorEntry = MibTableRow((1, 3, 6, 1, 2, 1, 28, 5, 1)).setIndexNames((0, "NETWORK-SERVICES-MIB", "applIndex"), (0, "MTA-MIB", "mtaGroupIndex"), (0, "MTA-MIB", "mtaStatusCode"))
if mibBuilder.loadTexts: mtaGroupErrorEntry.setDescription("The entry holding information regarding accumulated\nerrors for each MTA group.")
mtaGroupInboundErrorCount = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupInboundErrorCount.setDescription("Count of the number of errors of a given type that have\nbeen accumulated in association with a particular group\nwhile processing incoming messages. In the case of SMTP\nthese will typically be errors reporting by an SMTP\nserver to the remote client; in the case of X.400\nthese will typically be errors encountered while\nprocessing an incoming message.")
mtaGroupInternalErrorCount = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupInternalErrorCount.setDescription("Count of the number of errors of a given type that have\nbeen accumulated in association with a particular group\nduring internal MTA processing.")
mtaGroupOutboundErrorCount = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: mtaGroupOutboundErrorCount.setDescription("Count of the number of errors of a given type that have\nbeen accumulated in association with a particular group's\noutbound connection activities. In the case of an SMTP\nclient these will typically be errors reported while\nattempting to contact or while communicating with the\nremote SMTP server. In the case of X.400 these will\ntypically be errors encountered while constructing\nor attempting to deliver an outgoing message.")
mtaStatusCode = MibTableColumn((1, 3, 6, 1, 2, 1, 28, 5, 1, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(4000000, 5999999))).setMaxAccess("noaccess")
if mibBuilder.loadTexts: mtaStatusCode.setDescription("An index capable of representing an Enhanced Mail System\nStatus Code.  Enhanced Mail System Status Codes are\ndefined in RFC 1893.  These codes have the form\n\n    class.subject.detail\n\nHere 'class' is either 2, 4, or 5 and both 'subject' and\n'detail'  are integers in the range 0..999. Given a status\ncode the corresponding index value is defined to be\n((class * 1000) + subject) * 1000 + detail.  Both SMTP\nerror response codes and X.400 reason and diagnostic codes\ncan be mapped into these codes, resulting in a namespace\ncapable of describing most error conditions a mail system\nencounters in a generic yet detailed way.")

# Augmentions

# Groups

mtaRFC2249Group = ObjectGroup((1, 3, 6, 1, 2, 1, 28, 4, 1, 4)).setObjects(*(("MTA-MIB", "mtaGroupLastOutboundAssociationAttempt"), ("MTA-MIB", "mtaGroupCreationTime"), ("MTA-MIB", "mtaStoredRecipients"), ("MTA-MIB", "mtaGroupOldestMessageStored"), ("MTA-MIB", "mtaStoredMessages"), ("MTA-MIB", "mtaTransmittedRecipients"), ("MTA-MIB", "mtaGroupOldestMessageId"), ("MTA-MIB", "mtaReceivedVolume"), ("MTA-MIB", "mtaGroupURL"), ("MTA-MIB", "mtaGroupDescription"), ("MTA-MIB", "mtaGroupReceivedRecipients"), ("MTA-MIB", "mtaGroupLastInboundActivity"), ("MTA-MIB", "mtaGroupLoopsDetected"), ("MTA-MIB", "mtaGroupFailedOutboundAssociations"), ("MTA-MIB", "mtaGroupAccumulatedInboundAssociations"), ("MTA-MIB", "mtaGroupInboundAssociations"), ("MTA-MIB", "mtaGroupOutboundAssociations"), ("MTA-MIB", "mtaGroupAccumulatedOutboundAssociations"), ("MTA-MIB", "mtaTransmittedVolume"), ("MTA-MIB", "mtaGroupTransmittedVolume"), ("MTA-MIB", "mtaGroupLastOutboundActivity"), ("MTA-MIB", "mtaGroupTransmittedMessages"), ("MTA-MIB", "mtaLoopsDetected"), ("MTA-MIB", "mtaGroupMailProtocol"), ("MTA-MIB", "mtaGroupTransmittedRecipients"), ("MTA-MIB", "mtaStoredVolume"), ("MTA-MIB", "mtaFailedConvertedMessages"), ("MTA-MIB", "mtaGroupStoredVolume"), ("MTA-MIB", "mtaGroupRejectedInboundAssociations"), ("MTA-MIB", "mtaTransmittedMessages"), ("MTA-MIB", "mtaGroupRejectedMessages"), ("MTA-MIB", "mtaGroupStoredRecipients"), ("MTA-MIB", "mtaGroupFailedConvertedMessages"), ("MTA-MIB", "mtaGroupReceivedMessages"), ("MTA-MIB", "mtaGroupHierarchy"), ("MTA-MIB", "mtaGroupSuccessfulConvertedMessages"), ("MTA-MIB", "mtaGroupReceivedVolume"), ("MTA-MIB", "mtaReceivedRecipients"), ("MTA-MIB", "mtaReceivedMessages"), ("MTA-MIB", "mtaGroupOutboundConnectFailureReason"), ("MTA-MIB", "mtaGroupInboundRejectionReason"), ("MTA-MIB", "mtaGroupStoredMessages"), ("MTA-MIB", "mtaSuccessfulConvertedMessages"), ("MTA-MIB", "mtaGroupScheduledRetry"), ("MTA-MIB", "mtaGroupName"), ) )
if mibBuilder.loadTexts: mtaRFC2249Group.setDescription("A collection of objects providing basic monitoring of MTAs.\nThis group was originally defined in RFC 2249.")
mtaRFC2249AssocGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 28, 4, 1, 5)).setObjects(*(("MTA-MIB", "mtaGroupAssociationIndex"), ) )
if mibBuilder.loadTexts: mtaRFC2249AssocGroup.setDescription("A collection of objects providing monitoring of MTA\nassociations.  This group was originally defined in RFC\n2249.")
mtaRFC2249ErrorGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 28, 4, 1, 6)).setObjects(*(("MTA-MIB", "mtaGroupInternalErrorCount"), ("MTA-MIB", "mtaGroupOutboundErrorCount"), ("MTA-MIB", "mtaGroupInboundErrorCount"), ) )
if mibBuilder.loadTexts: mtaRFC2249ErrorGroup.setDescription("A collection of objects providing monitoring of\ndetailed MTA errors.  This group was originally defined\nin RFC 2249.")
mtaRFC2789Group = ObjectGroup((1, 3, 6, 1, 2, 1, 28, 4, 1, 7)).setObjects(*(("MTA-MIB", "mtaGroupLastOutboundAssociationAttempt"), ("MTA-MIB", "mtaGroupCreationTime"), ("MTA-MIB", "mtaStoredRecipients"), ("MTA-MIB", "mtaGroupOldestMessageStored"), ("MTA-MIB", "mtaStoredMessages"), ("MTA-MIB", "mtaTransmittedRecipients"), ("MTA-MIB", "mtaGroupOldestMessageId"), ("MTA-MIB", "mtaReceivedVolume"), ("MTA-MIB", "mtaGroupURL"), ("MTA-MIB", "mtaGroupDescription"), ("MTA-MIB", "mtaGroupReceivedRecipients"), ("MTA-MIB", "mtaGroupLastInboundActivity"), ("MTA-MIB", "mtaGroupLoopsDetected"), ("MTA-MIB", "mtaGroupFailedOutboundAssociations"), ("MTA-MIB", "mtaGroupAccumulatedInboundAssociations"), ("MTA-MIB", "mtaGroupInboundAssociations"), ("MTA-MIB", "mtaGroupOutboundAssociations"), ("MTA-MIB", "mtaGroupAccumulatedOutboundAssociations"), ("MTA-MIB", "mtaTransmittedVolume"), ("MTA-MIB", "mtaGroupTransmittedVolume"), ("MTA-MIB", "mtaGroupLastOutboundActivity"), ("MTA-MIB", "mtaGroupTransmittedMessages"), ("MTA-MIB", "mtaLoopsDetected"), ("MTA-MIB", "mtaGroupMailProtocol"), ("MTA-MIB", "mtaGroupTransmittedRecipients"), ("MTA-MIB", "mtaStoredVolume"), ("MTA-MIB", "mtaFailedConvertedMessages"), ("MTA-MIB", "mtaGroupStoredVolume"), ("MTA-MIB", "mtaGroupRejectedInboundAssociations"), ("MTA-MIB", "mtaTransmittedMessages"), ("MTA-MIB", "mtaGroupRejectedMessages"), ("MTA-MIB", "mtaGroupStoredRecipients"), ("MTA-MIB", "mtaGroupFailedConvertedMessages"), ("MTA-MIB", "mtaGroupReceivedMessages"), ("MTA-MIB", "mtaGroupHierarchy"), ("MTA-MIB", "mtaGroupSuccessfulConvertedMessages"), ("MTA-MIB", "mtaGroupReceivedVolume"), ("MTA-MIB", "mtaReceivedRecipients"), ("MTA-MIB", "mtaReceivedMessages"), ("MTA-MIB", "mtaGroupOutboundConnectFailureReason"), ("MTA-MIB", "mtaGroupInboundRejectionReason"), ("MTA-MIB", "mtaGroupStoredMessages"), ("MTA-MIB", "mtaSuccessfulConvertedMessages"), ("MTA-MIB", "mtaGroupScheduledRetry"), ("MTA-MIB", "mtaGroupName"), ) )
if mibBuilder.loadTexts: mtaRFC2789Group.setDescription("A collection of objects providing basic monitoring of MTAs.\nThis is the appropriate group for RFC 2789.")
mtaRFC2789AssocGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 28, 4, 1, 8)).setObjects(*(("MTA-MIB", "mtaGroupAssociationIndex"), ) )
if mibBuilder.loadTexts: mtaRFC2789AssocGroup.setDescription("A collection of objects providing monitoring of MTA\nassociations.  This is the appropriate group for RFC\n2789 association monitoring.")
mtaRFC2789ErrorGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 28, 4, 1, 9)).setObjects(*(("MTA-MIB", "mtaGroupInternalErrorCount"), ("MTA-MIB", "mtaGroupOutboundErrorCount"), ("MTA-MIB", "mtaGroupInboundErrorCount"), ) )
if mibBuilder.loadTexts: mtaRFC2789ErrorGroup.setDescription("A collection of objects providing monitoring of\ndetailed MTA errors.  This is the appropriate group\nfor RFC 2789 error monitoring.")
mtaRFC1566Group = ObjectGroup((1, 3, 6, 1, 2, 1, 28, 4, 1, 10)).setObjects(*(("MTA-MIB", "mtaTransmittedVolume"), ("MTA-MIB", "mtaGroupStoredVolume"), ("MTA-MIB", "mtaGroupTransmittedVolume"), ("MTA-MIB", "mtaGroupRejectedInboundAssociations"), ("MTA-MIB", "mtaGroupOldestMessageStored"), ("MTA-MIB", "mtaGroupOutboundConnectFailureReason"), ("MTA-MIB", "mtaTransmittedMessages"), ("MTA-MIB", "mtaGroupReceivedRecipients"), ("MTA-MIB", "mtaGroupRejectedMessages"), ("MTA-MIB", "mtaGroupStoredRecipients"), ("MTA-MIB", "mtaGroupAccumulatedInboundAssociations"), ("MTA-MIB", "mtaGroupReceivedMessages"), ("MTA-MIB", "mtaGroupReceivedVolume"), ("MTA-MIB", "mtaStoredRecipients"), ("MTA-MIB", "mtaGroupMailProtocol"), ("MTA-MIB", "mtaGroupLastInboundActivity"), ("MTA-MIB", "mtaTransmittedRecipients"), ("MTA-MIB", "mtaStoredMessages"), ("MTA-MIB", "mtaGroupLastOutboundActivity"), ("MTA-MIB", "mtaReceivedRecipients"), ("MTA-MIB", "mtaReceivedMessages"), ("MTA-MIB", "mtaGroupFailedOutboundAssociations"), ("MTA-MIB", "mtaGroupTransmittedRecipients"), ("MTA-MIB", "mtaReceivedVolume"), ("MTA-MIB", "mtaGroupInboundRejectionReason"), ("MTA-MIB", "mtaGroupStoredMessages"), ("MTA-MIB", "mtaGroupTransmittedMessages"), ("MTA-MIB", "mtaStoredVolume"), ("MTA-MIB", "mtaGroupScheduledRetry"), ("MTA-MIB", "mtaGroupInboundAssociations"), ("MTA-MIB", "mtaGroupOutboundAssociations"), ("MTA-MIB", "mtaGroupName"), ("MTA-MIB", "mtaGroupAccumulatedOutboundAssociations"), ) )
if mibBuilder.loadTexts: mtaRFC1566Group.setDescription("A collection of objects providing basic monitoring of MTAs.\nThis is the original set of such objects defined in RFC\n1566.")
mtaRFC1566AssocGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 28, 4, 1, 11)).setObjects(*(("MTA-MIB", "mtaGroupAssociationIndex"), ) )
if mibBuilder.loadTexts: mtaRFC1566AssocGroup.setDescription("A collection of objects providing monitoring of MTA\nassociations.  This is the original set of such objects\ndefined in RFC 1566.")

# Compliances

mtaCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 28, 4, 2, 1)).setObjects(*(("MTA-MIB", "mtaRFC1566Group"), ) )
if mibBuilder.loadTexts: mtaCompliance.setDescription("The compliance statement for RFC 1566 implementations\nwhich support the Mail Monitoring MIB for basic\nmonitoring of MTAs.")
mtaAssocCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 28, 4, 2, 2)).setObjects(*(("MTA-MIB", "mtaRFC1566AssocGroup"), ("MTA-MIB", "mtaRFC1566Group"), ) )
if mibBuilder.loadTexts: mtaAssocCompliance.setDescription("The compliance statement for RFC 1566 implementations\nwhich support the Mail Monitoring MIB for monitoring\nof MTAs and their associations.")
mtaRFC2249Compliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 28, 4, 2, 5)).setObjects(*(("MTA-MIB", "mtaRFC2249Group"), ) )
if mibBuilder.loadTexts: mtaRFC2249Compliance.setDescription("The compliance statement for RFC 2249 implementations\nwhich support the Mail Monitoring MIB for basic\nmonitoring of MTAs.")
mtaRFC2249AssocCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 28, 4, 2, 6)).setObjects(*(("MTA-MIB", "mtaRFC2249Group"), ("MTA-MIB", "mtaRFC2249AssocGroup"), ) )
if mibBuilder.loadTexts: mtaRFC2249AssocCompliance.setDescription("The compliance statement for RFC 2249 implementations\nwhich support the Mail Monitoring MIB for monitoring of\nMTAs and their associations.")
mtaRFC2249ErrorCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 28, 4, 2, 7)).setObjects(*(("MTA-MIB", "mtaRFC2249Group"), ("MTA-MIB", "mtaRFC2249ErrorGroup"), ) )
if mibBuilder.loadTexts: mtaRFC2249ErrorCompliance.setDescription("The compliance statement for RFC 2249 implementations\nwhich support the Mail Monitoring MIB for monitoring of\nMTAs and detailed errors.")
mtaRFC2249FullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 28, 4, 2, 8)).setObjects(*(("MTA-MIB", "mtaRFC2249Group"), ("MTA-MIB", "mtaRFC2249ErrorGroup"), ("MTA-MIB", "mtaRFC2249AssocGroup"), ) )
if mibBuilder.loadTexts: mtaRFC2249FullCompliance.setDescription("The compliance statement for RFC 2249 implementations\nwhich support the full Mail Monitoring MIB for\nmonitoring of MTAs, associations, and detailed errors.")
mtaRFC2789Compliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 28, 4, 2, 9)).setObjects(*(("MTA-MIB", "mtaRFC2789Group"), ) )
if mibBuilder.loadTexts: mtaRFC2789Compliance.setDescription("The compliance statement for RFC 2789 implementations\nwhich support the Mail Monitoring MIB for basic\nmonitoring of MTAs.")
mtaRFC2789AssocCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 28, 4, 2, 10)).setObjects(*(("MTA-MIB", "mtaRFC2789AssocGroup"), ("MTA-MIB", "mtaRFC2789Group"), ) )
if mibBuilder.loadTexts: mtaRFC2789AssocCompliance.setDescription("The compliance statement for RFC 2789 implementations\nwhich support the Mail Monitoring MIB for monitoring of\nMTAs and their associations.")
mtaRFC2789ErrorCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 28, 4, 2, 11)).setObjects(*(("MTA-MIB", "mtaRFC2789Group"), ("MTA-MIB", "mtaRFC2789ErrorGroup"), ) )
if mibBuilder.loadTexts: mtaRFC2789ErrorCompliance.setDescription("The compliance statement for RFC 2789 implementations\nwhich support the Mail Monitoring MIB for monitoring of\nMTAs and detailed errors.")
mtaRFC2789FullCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 28, 4, 2, 12)).setObjects(*(("MTA-MIB", "mtaRFC2789AssocGroup"), ("MTA-MIB", "mtaRFC2789Group"), ("MTA-MIB", "mtaRFC2789ErrorGroup"), ) )
if mibBuilder.loadTexts: mtaRFC2789FullCompliance.setDescription("The compliance statement for RFC 2789 implementations\nwhich support the full Mail Monitoring MIB for\nmonitoring of MTAs, associations, and detailed errors.")

# Exports

# Module identity
mibBuilder.exportSymbols("MTA-MIB", PYSNMP_MODULE_ID=mta)

# Objects
mibBuilder.exportSymbols("MTA-MIB", mta=mta, mtaTable=mtaTable, mtaEntry=mtaEntry, mtaReceivedMessages=mtaReceivedMessages, mtaStoredMessages=mtaStoredMessages, mtaTransmittedMessages=mtaTransmittedMessages, mtaReceivedVolume=mtaReceivedVolume, mtaStoredVolume=mtaStoredVolume, mtaTransmittedVolume=mtaTransmittedVolume, mtaReceivedRecipients=mtaReceivedRecipients, mtaStoredRecipients=mtaStoredRecipients, mtaTransmittedRecipients=mtaTransmittedRecipients, mtaSuccessfulConvertedMessages=mtaSuccessfulConvertedMessages, mtaFailedConvertedMessages=mtaFailedConvertedMessages, mtaLoopsDetected=mtaLoopsDetected, mtaGroupTable=mtaGroupTable, mtaGroupEntry=mtaGroupEntry, mtaGroupIndex=mtaGroupIndex, mtaGroupReceivedMessages=mtaGroupReceivedMessages, mtaGroupRejectedMessages=mtaGroupRejectedMessages, mtaGroupStoredMessages=mtaGroupStoredMessages, mtaGroupTransmittedMessages=mtaGroupTransmittedMessages, mtaGroupReceivedVolume=mtaGroupReceivedVolume, mtaGroupStoredVolume=mtaGroupStoredVolume, mtaGroupTransmittedVolume=mtaGroupTransmittedVolume, mtaGroupReceivedRecipients=mtaGroupReceivedRecipients, mtaGroupStoredRecipients=mtaGroupStoredRecipients, mtaGroupTransmittedRecipients=mtaGroupTransmittedRecipients, mtaGroupOldestMessageStored=mtaGroupOldestMessageStored, mtaGroupInboundAssociations=mtaGroupInboundAssociations, mtaGroupOutboundAssociations=mtaGroupOutboundAssociations, mtaGroupAccumulatedInboundAssociations=mtaGroupAccumulatedInboundAssociations, mtaGroupAccumulatedOutboundAssociations=mtaGroupAccumulatedOutboundAssociations, mtaGroupLastInboundActivity=mtaGroupLastInboundActivity, mtaGroupLastOutboundActivity=mtaGroupLastOutboundActivity, mtaGroupRejectedInboundAssociations=mtaGroupRejectedInboundAssociations, mtaGroupFailedOutboundAssociations=mtaGroupFailedOutboundAssociations, mtaGroupInboundRejectionReason=mtaGroupInboundRejectionReason, mtaGroupOutboundConnectFailureReason=mtaGroupOutboundConnectFailureReason, mtaGroupScheduledRetry=mtaGroupScheduledRetry, mtaGroupMailProtocol=mtaGroupMailProtocol, mtaGroupName=mtaGroupName, mtaGroupSuccessfulConvertedMessages=mtaGroupSuccessfulConvertedMessages, mtaGroupFailedConvertedMessages=mtaGroupFailedConvertedMessages, mtaGroupDescription=mtaGroupDescription, mtaGroupURL=mtaGroupURL, mtaGroupCreationTime=mtaGroupCreationTime, mtaGroupHierarchy=mtaGroupHierarchy, mtaGroupOldestMessageId=mtaGroupOldestMessageId, mtaGroupLoopsDetected=mtaGroupLoopsDetected, mtaGroupLastOutboundAssociationAttempt=mtaGroupLastOutboundAssociationAttempt, mtaGroupAssociationTable=mtaGroupAssociationTable, mtaGroupAssociationEntry=mtaGroupAssociationEntry, mtaGroupAssociationIndex=mtaGroupAssociationIndex, mtaConformance=mtaConformance, mtaGroups=mtaGroups, mtaCompliances=mtaCompliances, mtaGroupErrorTable=mtaGroupErrorTable, mtaGroupErrorEntry=mtaGroupErrorEntry, mtaGroupInboundErrorCount=mtaGroupInboundErrorCount, mtaGroupInternalErrorCount=mtaGroupInternalErrorCount, mtaGroupOutboundErrorCount=mtaGroupOutboundErrorCount, mtaStatusCode=mtaStatusCode)

# Groups
mibBuilder.exportSymbols("MTA-MIB", mtaRFC2249Group=mtaRFC2249Group, mtaRFC2249AssocGroup=mtaRFC2249AssocGroup, mtaRFC2249ErrorGroup=mtaRFC2249ErrorGroup, mtaRFC2789Group=mtaRFC2789Group, mtaRFC2789AssocGroup=mtaRFC2789AssocGroup, mtaRFC2789ErrorGroup=mtaRFC2789ErrorGroup, mtaRFC1566Group=mtaRFC1566Group, mtaRFC1566AssocGroup=mtaRFC1566AssocGroup)

# Compliances
mibBuilder.exportSymbols("MTA-MIB", mtaCompliance=mtaCompliance, mtaAssocCompliance=mtaAssocCompliance, mtaRFC2249Compliance=mtaRFC2249Compliance, mtaRFC2249AssocCompliance=mtaRFC2249AssocCompliance, mtaRFC2249ErrorCompliance=mtaRFC2249ErrorCompliance, mtaRFC2249FullCompliance=mtaRFC2249FullCompliance, mtaRFC2789Compliance=mtaRFC2789Compliance, mtaRFC2789AssocCompliance=mtaRFC2789AssocCompliance, mtaRFC2789ErrorCompliance=mtaRFC2789ErrorCompliance, mtaRFC2789FullCompliance=mtaRFC2789FullCompliance)
