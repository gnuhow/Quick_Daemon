# PySNMP SMI module. Autogenerated from smidump -f python TOKENRING-STATION-SR-MIB
# by libsmi2pysnmp-0.1.3 at Mon Apr  2 20:39:46 2012,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( ifIndex, ) = mibBuilder.importSymbols("IF-MIB", "ifIndex")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "mib-2")
( MacAddress, RowStatus, TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "MacAddress", "RowStatus", "TextualConvention")

# Types

class SourceRoute(TextualConvention, OctetString):
    displayHint = "1x:"
    subtypeSpec = OctetString.subtypeSpec+ValueSizeConstraint(0,30)
    

# Objects

dot5SrMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 42)).setRevisions(("1994-12-16 10:00",))
if mibBuilder.loadTexts: dot5SrMIB.setOrganization("IETF Interfaces MIB Working Group")
if mibBuilder.loadTexts: dot5SrMIB.setContactInfo("       Keith McCloghrie\nPostal: Cisco Systems, Inc.\n        170 West Tasman Drive\n        San Jose, CA  95134-1706\n        US\n\n Phone: +1 408 526 5260\n Email: kzm@cisco.com")
if mibBuilder.loadTexts: dot5SrMIB.setDescription("The MIB module for managing source routes in\nend-stations on IEEE 802.5 Token Ring networks.")
dot5SrMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 42, 1))
dot5SrRouteTable = MibTable((1, 3, 6, 1, 2, 1, 42, 1, 1))
if mibBuilder.loadTexts: dot5SrRouteTable.setDescription("The table of source-routing routes.\nThis represents the 802.5 RIF database.")
dot5SrRouteEntry = MibTableRow((1, 3, 6, 1, 2, 1, 42, 1, 1, 1)).setIndexNames((0, "IF-MIB", "ifIndex"), (0, "TOKENRING-STATION-SR-MIB", "dot5SrRouteDestination"))
if mibBuilder.loadTexts: dot5SrRouteEntry.setDescription("Information on a specific route.\n\nAn entry is created whenever a 'Single Path\nExplorer' or an 'All Paths Explorer' discovers\na route to a neighbor not currently in the table,\nor whenever an 'All Paths Explorer' discovers a\nbetter (e.g., shorter) route than the route currently\nstored in the table.  This is done on behalf of\nany network layer client.\n\nThe ifIndex value in the INDEX clause refers to\nthe value of MIB-II's ifIndex object for the\ninterface on which the route is in effect.")
dot5SrRouteDestination = MibTableColumn((1, 3, 6, 1, 2, 1, 42, 1, 1, 1, 2), MacAddress()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: dot5SrRouteDestination.setDescription("The destination of this route.")
dot5SrRouteControl = MibTableColumn((1, 3, 6, 1, 2, 1, 42, 1, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(2, 2)).setFixedLength(2)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dot5SrRouteControl.setDescription("The value of Routing Control field for this\nroute.")
dot5SrRouteDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 42, 1, 1, 1, 4), SourceRoute()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dot5SrRouteDescr.setDescription("The embedded sequence of bridge and ring ID's\nfor this route.  For destinations on the\nlocal ring, the value of this object is\nthe zero-length string.")
dot5SrRouteStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 42, 1, 1, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: dot5SrRouteStatus.setDescription("The status of this row.  Values of the instances\nof dot5SrRouteControl and dot5SrRouteDescr can be\nmodified while the row's status is 'active.")
dot5SrConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 42, 2))
dot5SrGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 42, 2, 1))
dot5SrCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 42, 2, 2))

# Augmentions

# Groups

dot5SrRouteGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 42, 2, 1, 1)).setObjects(*(("TOKENRING-STATION-SR-MIB", "dot5SrRouteControl"), ("TOKENRING-STATION-SR-MIB", "dot5SrRouteStatus"), ("TOKENRING-STATION-SR-MIB", "dot5SrRouteDescr"), ) )
if mibBuilder.loadTexts: dot5SrRouteGroup.setDescription("A collection of objects providing for the management of\nsource routes in stations on IEEE 802.5 source-routing\nnetworks.")

# Compliances

dot5SrCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 42, 2, 2, 1)).setObjects(*(("TOKENRING-STATION-SR-MIB", "dot5SrRouteGroup"), ) )
if mibBuilder.loadTexts: dot5SrCompliance.setDescription("The compliance statement for SNMPv2 entities\nwhich implement the IEEE 802.5 Station Source Route\nMIB.")

# Exports

# Module identity
mibBuilder.exportSymbols("TOKENRING-STATION-SR-MIB", PYSNMP_MODULE_ID=dot5SrMIB)

# Types
mibBuilder.exportSymbols("TOKENRING-STATION-SR-MIB", SourceRoute=SourceRoute)

# Objects
mibBuilder.exportSymbols("TOKENRING-STATION-SR-MIB", dot5SrMIB=dot5SrMIB, dot5SrMIBObjects=dot5SrMIBObjects, dot5SrRouteTable=dot5SrRouteTable, dot5SrRouteEntry=dot5SrRouteEntry, dot5SrRouteDestination=dot5SrRouteDestination, dot5SrRouteControl=dot5SrRouteControl, dot5SrRouteDescr=dot5SrRouteDescr, dot5SrRouteStatus=dot5SrRouteStatus, dot5SrConformance=dot5SrConformance, dot5SrGroups=dot5SrGroups, dot5SrCompliances=dot5SrCompliances)

# Groups
mibBuilder.exportSymbols("TOKENRING-STATION-SR-MIB", dot5SrRouteGroup=dot5SrRouteGroup)

# Compliances
mibBuilder.exportSymbols("TOKENRING-STATION-SR-MIB", dot5SrCompliance=dot5SrCompliance)
