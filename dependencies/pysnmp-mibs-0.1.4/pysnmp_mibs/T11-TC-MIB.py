# PySNMP SMI module. Autogenerated from smidump -f python T11-TC-MIB
# by libsmi2pysnmp-0.1.3 at Mon Apr  2 20:39:43 2012,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( Bits, Integer32, ModuleIdentity, MibIdentifier, TimeTicks, Unsigned32, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "ModuleIdentity", "MibIdentifier", "TimeTicks", "Unsigned32", "mib-2")
( TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention")

# Types

class T11FabricIndex(TextualConvention, Unsigned32):
    displayHint = "d"
    subtypeSpec = Unsigned32.subtypeSpec+ValueRangeConstraint(0,4095)
    

# Objects

t11TcMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 136)).setRevisions(("2006-03-02 00:00",))
if mibBuilder.loadTexts: t11TcMIB.setOrganization("T11")
if mibBuilder.loadTexts: t11TcMIB.setContactInfo("     Claudio DeSanti\nCisco Systems, Inc.\n170 West Tasman Drive\nSan Jose, CA 95134 USA\nPhone: +1 408 853-9172\nEMail: cds@cisco.com\n\nKeith McCloghrie\nCisco Systems, Inc.\n170 West Tasman Drive\nSan Jose, CA USA 95134\nPhone: +1 408-526-5260\nEMail: kzm@cisco.com")
if mibBuilder.loadTexts: t11TcMIB.setDescription("This module defines textual conventions used in T11 MIBs.\n\nCopyright (C) The Internet Society (2006).  This version\nof this MIB module is part of RFC 4439;  see the RFC\nitself for full legal notices.")

# Augmentions

# Exports

# Module identity
mibBuilder.exportSymbols("T11-TC-MIB", PYSNMP_MODULE_ID=t11TcMIB)

# Types
mibBuilder.exportSymbols("T11-TC-MIB", T11FabricIndex=T11FabricIndex)

# Objects
mibBuilder.exportSymbols("T11-TC-MIB", t11TcMIB=t11TcMIB)

