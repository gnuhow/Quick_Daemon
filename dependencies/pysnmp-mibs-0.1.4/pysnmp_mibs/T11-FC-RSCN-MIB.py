# PySNMP SMI module. Autogenerated from smidump -f python T11-FC-RSCN-MIB
# by libsmi2pysnmp-0.1.3 at Mon Apr  2 20:39:42 2012,
# Python version sys.version_info(major=2, minor=7, micro=2, releaselevel='final', serial=0)

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( NamedValues, ) = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
( ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint, ValueRangeConstraint, ValueSizeConstraint, ) = mibBuilder.importSymbols("ASN1-REFINEMENT", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint", "ValueRangeConstraint", "ValueSizeConstraint")
( FcAddressIdOrZero, FcNameIdOrZero, fcmInstanceIndex, fcmSwitchIndex, ) = mibBuilder.importSymbols("FC-MGMT-MIB", "FcAddressIdOrZero", "FcNameIdOrZero", "fcmInstanceIndex", "fcmSwitchIndex")
( ModuleCompliance, NotificationGroup, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
( Bits, Counter32, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "mib-2")
( TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "TruthValue")
( T11NsGs4RejectReasonCode, ) = mibBuilder.importSymbols("T11-FC-NAME-SERVER-MIB", "T11NsGs4RejectReasonCode")
( T11FabricIndex, ) = mibBuilder.importSymbols("T11-TC-MIB", "T11FabricIndex")

# Objects

t11FcRscnMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 161)).setRevisions(("2007-01-08 00:00",))
if mibBuilder.loadTexts: t11FcRscnMIB.setOrganization("For the initial versions, T11.\nFor later versions, the IETF's IMSS Working Group.")
if mibBuilder.loadTexts: t11FcRscnMIB.setContactInfo("     Claudio DeSanti\nCisco Systems, Inc.\n170 West Tasman Drive\nSan Jose, CA 95134 USA\nEMail: cds@cisco.com\n\nKeith McCloghrie\nCisco Systems, Inc.\n170 West Tasman Drive\nSan Jose, CA 95134 USA\nEMail: kzm@cisco.com")
if mibBuilder.loadTexts: t11FcRscnMIB.setDescription("The MIB module for the management of registrations\n\n\n\nby Nx_Ports to receive RSCNs (Registered State Change\nNotifications) on a Fibre Channel Fabric, as defined\nin FC-LS, and for the monitoring of RSCNs sent/received\nor rejected in a Fibre Channel Fabric.\n\nCopyright (C) The Internet Society (2007).  This version of\nthis MIB module is part of RFC 4983;  see the RFC itself for\nfull legal notices.")
t11FcRscnNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 161, 0))
t11FcRscnObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 161, 1))
t11FcRscnRegistrations = MibIdentifier((1, 3, 6, 1, 2, 1, 161, 1, 1))
t11FcRscnRegTable = MibTable((1, 3, 6, 1, 2, 1, 161, 1, 1, 1))
if mibBuilder.loadTexts: t11FcRscnRegTable.setDescription("A table of Nx_Ports that have registered to receive\nRSCNs on all Fabrics configured on one or more Fibre\nChannel switches.")
t11FcRscnRegEntry = MibTableRow((1, 3, 6, 1, 2, 1, 161, 1, 1, 1, 1)).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-RSCN-MIB", "t11FcRscnFabricIndex"), (0, "T11-FC-RSCN-MIB", "t11FcRscnRegFcId"))
if mibBuilder.loadTexts: t11FcRscnRegEntry.setDescription("An entry containing information about one Nx_Port that\nhas registered with a particular switch (identified by\nvalues of fcmInstanceIndex and fcmSwitchIndex) for a\nparticular Fabric (identified by a t11FcRscnFabricIndex\nvalue).")
t11FcRscnFabricIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 1, 1, 1, 1), T11FabricIndex()).setMaxAccess("noaccess")
if mibBuilder.loadTexts: t11FcRscnFabricIndex.setDescription("An index value that uniquely identifies a particular\nFabric.\n\nIn a Fabric conformant to FC-SW-4, multiple Virtual Fabrics\ncan operate within one (or more) physical infrastructures.\nIn such a case, this index value is used to uniquely\nidentify a particular Fabric within a physical\ninfrastructure.\n\nIn a Fabric that has (or can have) only a single Fabric\noperating within the physical infrastructure, the\nvalue of this Fabric Index will always be 1.")
t11FcRscnRegFcId = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 1, 1, 1, 2), FcAddressIdOrZero().subtype(subtypeSpec=ValueSizeConstraint(3, 3)).setFixedLength(3)).setMaxAccess("noaccess")
if mibBuilder.loadTexts: t11FcRscnRegFcId.setDescription("The Fibre Channel Address Identifier of the\nregistering Nx_Port.")
t11FcRscnRegType = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 1, 1, 1, 3), Bits().subtype(namedValues=NamedValues(("fromFabricController", 0), ("fromNxPort", 1), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnRegType.setDescription("This object indicates the type of registration\ndesired by the registering Nx_Port, one bit per type:\n\n'fromFabricController' -- RSCNs generated for events\n\n\n\n                       detected by the Fabric Controller.\n\n'fromNxPorts'          -- RSCNs generated for events\n                       detected by the affected Nx_Port.")
t11FcRscnStats = MibIdentifier((1, 3, 6, 1, 2, 1, 161, 1, 2))
t11FcRscnStatsTable = MibTable((1, 3, 6, 1, 2, 1, 161, 1, 2, 1))
if mibBuilder.loadTexts: t11FcRscnStatsTable.setDescription("The RSCN-related statistics on all Fabrics configured\non one or more Fibre Channel switches.\n\nTwo levels of statistics are included:\n\n   1) counters at the message-type level, for:\n      - the number of SCRs received/rejected,\n      - the number of RSCNs sent/received/rejected,\n      - the number of SW_RSCNs sent/received/rejected.\n\n   2) counters of sent/received RSCNs per 'Event\n      Qualifier' value.  Note that if and when several\n      RSCN events are coalesced into a single RSCN\n      message, then that message may be counted in\n      more than one of these counters.")
t11FcRscnStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1)).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-RSCN-MIB", "t11FcRscnFabricIndex"))
if mibBuilder.loadTexts: t11FcRscnStatsEntry.setDescription("An entry containing statistics for a particular Fabric\n(identified by a t11FcRscnFabricIndex value) on a particular\nswitch (identified by values of fcmInstanceIndex and\nfcmSwitchIndex).")
t11FcRscnInScrs = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnInScrs.setDescription("The number of SCRs received from Nx_Ports\nby this switch on this Fabric.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnInRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnInRscns.setDescription("The number of RSCNs received from Nx_Ports\nby this switch on this Fabric.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnOutRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnOutRscns.setDescription("The number of RSCNs transmitted to Nx_Ports\nby this switch on this Fabric.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnInSwRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnInSwRscns.setDescription("The number of SW_RSCNs received by this switch from\nother switches on this Fabric.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnOutSwRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnOutSwRscns.setDescription("The number of SW_RSCNs transmitted by this switch\nfrom other switches on this Fabric.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnScrRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnScrRejects.setDescription("The number of SCRs rejected by this switch on\nthis Fabric.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnRscnRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnRscnRejects.setDescription("The number of RSCNs rejected by this switch on this\nFabric.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnSwRscnRejects = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnSwRscnRejects.setDescription("The number of SW_RSCN rejected by this switch on this\nFabric.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnInUnspecifiedRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnInUnspecifiedRscns.setDescription("The number of Registered State Change Notifications\n(RSCNs) received by this switch on this Fabric which\ncontained an RSCN Event Qualifier value of '0000'b\nmeaning 'Event is not specified'.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnOutUnspecifiedRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnOutUnspecifiedRscns.setDescription("The number of Registered State Change Notifications\n(RSCNs) sent by this switch on this Fabric which\ncontained an RSCN Event Qualifier value of '0000'b\nmeaning 'Event is not specified'.\n\n\n\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnInChangedAttribRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnInChangedAttribRscns.setDescription("The number of Registered State Change Notifications\n(RSCNs) received by this switch on this Fabric which\ncontained an RSCN Event Qualifier value of '0002'b\nmeaning 'Changed Port Attribute'.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnOutChangedAttribRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnOutChangedAttribRscns.setDescription("The number of Registered State Change Notifications\n(RSCNs) sent by this switch on this Fabric which\ncontained an RSCN Event Qualifier value of '0002'b\nmeaning 'Changed Port Attribute'.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnInChangedServiceRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnInChangedServiceRscns.setDescription("The number of Registered State Change Notifications\n(RSCNs) received by this switch on this Fabric which\n\n\n\ncontained an RSCN Event Qualifier value of '0003'b\nmeaning 'Changed Service Object'.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnOutChangedServiceRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnOutChangedServiceRscns.setDescription("The number of Registered State Change Notifications\n(RSCNs) sent by this switch on this Fabric which\ncontained an RSCN Event Qualifier value of '0003'b\nmeaning 'Changed Service Object'.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnInChangedSwitchRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnInChangedSwitchRscns.setDescription("The number of Registered State Change Notifications\n(RSCNs) received by this switch on this Fabric which\ncontained an RSCN Event Qualifier value of '0004'b\nmeaning 'Changed Switch Configuration'.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnOutChangedSwitchRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnOutChangedSwitchRscns.setDescription("The number of Registered State Change Notifications\n(RSCNs) sent by this switch on this Fabric which\ncontained an RSCN Event Qualifier value of '0004'b\nmeaning 'Changed Switch Configuration'.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnInRemovedRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnInRemovedRscns.setDescription("The number of Registered State Change Notifications\n(RSCNs) received by this switch on this Fabric which\ncontained an RSCN Event Qualifier value of '0005'b\nmeaning 'Removed Object'.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnOutRemovedRscns = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 2, 1, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnOutRemovedRscns.setDescription("The number of Registered State Change Notifications\n(RSCNs) sent by this switch on this Fabric which\ncontained an RSCN Event Qualifier value of '0005'b\nmeaning 'Removed Object'.\n\nThis counter has no discontinuities other than\nthose that all Counter32s have when sysUpTime=0.")
t11FcRscnInformation = MibIdentifier((1, 3, 6, 1, 2, 1, 161, 1, 3))
t11FcRscnNotifyControlTable = MibTable((1, 3, 6, 1, 2, 1, 161, 1, 3, 1))
if mibBuilder.loadTexts: t11FcRscnNotifyControlTable.setDescription("A table of control information for notifications\ngenerated due to the rejection of an SCR or RSCN.")
t11FcRscnNotifyControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 161, 1, 3, 1, 1)).setIndexNames((0, "FC-MGMT-MIB", "fcmInstanceIndex"), (0, "FC-MGMT-MIB", "fcmSwitchIndex"), (0, "T11-FC-RSCN-MIB", "t11FcRscnFabricIndex"))
if mibBuilder.loadTexts: t11FcRscnNotifyControlEntry.setDescription("Each entry contains notification control information\nconcerning the rejection of RSCN/SCRs for a particular\nFabric (identified by the value of t11FcRscnFabricIndex)\nby a particular switch (identified by values of\nfcmInstanceIndex and fcmSwitchIndex).")
t11FcRscnIlsRejectNotifyEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 3, 1, 1, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcRscnIlsRejectNotifyEnable.setDescription("This object specifies if a t11FcRscnIlsRejectReqNotify\nnotification should be generated when this switch\nrejects an SW_RSCN on this Fabric.\n\nValues written to this object should be retained\nover agent reboots.")
t11FcRscnElsRejectNotifyEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 3, 1, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: t11FcRscnElsRejectNotifyEnable.setDescription("This object specifies if a t11FcRscnElsRejectReqNotify\nnotification should be generated when this switch\nrejects an RSCN or SCR on this Fabric.\n\nValues written to this object should be retained\nover agent reboots.")
t11FcRscnRejectedRequestString = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 3, 1, 1, 3), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnRejectedRequestString.setDescription("The binary content of the RSCN, SCR, or SW_RSCN that\nwas most recently rejected by this switch on this Fabric.\nThe value is formatted as an octet string (in network\nbyte order) as described in the relevant Fibre Channel\nstandard, containing the payload (which is typically a\nlist of affected ports and error codes) of the rejected\nRSCN or SCR as described in FC-LS, or the rejected\nSW_RSCN as described in FC-SW-4.\n\nThis object contains the zero-length string if and when\nthe RSCN/SCR/SW_RSCN payload is unavailable.  When the\nlength of this object is 255 octets, it contains the\nfirst 255 octets of the payload (in network byte order).")
t11FcRscnRejectedRequestSource = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 3, 1, 1, 4), FcNameIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnRejectedRequestSource.setDescription("The WWN that was the source of the RSCN, SCR, or\nSW_RSCN that was most recently rejected by this switch\non this Fabric.")
t11FcRscnRejectReasonCode = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 3, 1, 1, 5), T11NsGs4RejectReasonCode()).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnRejectReasonCode.setDescription("This object contains the Reason Code of the most recent\nrejection by this switch of an RSCN, SCR or SW_RSCN on\nthis Fabric.")
t11FcRscnRejectReasonCodeExp = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 3, 1, 1, 6), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnRejectReasonCodeExp.setDescription("This object contains the Reason Code Explanation\nof the most recent rejection by this switch of an\nRSCN, SCR or SW_RSCN on this Fabric.")
t11FcRscnRejectReasonVendorCode = MibTableColumn((1, 3, 6, 1, 2, 1, 161, 1, 3, 1, 1, 7), OctetString().subtype(subtypeSpec=ValueSizeConstraint(1, 1)).setFixedLength(1)).setMaxAccess("readonly")
if mibBuilder.loadTexts: t11FcRscnRejectReasonVendorCode.setDescription("This object contains the Reason Vendor Specific\nCode of the most recent rejection by this switch\nof an RSCN, SCR or SW_RSCN on this Fabric.")
t11FcRscnConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 161, 2))
t11FcRscnCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 161, 2, 1))
t11FcRscnGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 161, 2, 2))

# Augmentions

# Notifications

t11FcRscnElsRejectReqNotify = NotificationType((1, 3, 6, 1, 2, 1, 161, 0, 1)).setObjects(*(("T11-FC-RSCN-MIB", "t11FcRscnRejectedRequestSource"), ("T11-FC-RSCN-MIB", "t11FcRscnRejectReasonCodeExp"), ("T11-FC-RSCN-MIB", "t11FcRscnRejectReasonVendorCode"), ("T11-FC-RSCN-MIB", "t11FcRscnRejectReasonCode"), ("T11-FC-RSCN-MIB", "t11FcRscnRejectedRequestString"), ) )
if mibBuilder.loadTexts: t11FcRscnElsRejectReqNotify.setDescription("This notification is generated when a switch rejects\nan SCR or RSCN.\n\nThe value of t11FcRscnRejectedRequestString indicates the\nbinary content of the rejected request if available, or\nthe zero-length string otherwise.  The source of the\nrejected request is given by t11FcRscnRejectedRequestSource,\nand the reason for rejection is given by the values of\nt11FcRscnRejectReasonCode, t11FcRscnRejectReasonCodeExp\nand t11FcRscnRejectReasonVendorCode.")
t11FcRscnIlsRejectReqNotify = NotificationType((1, 3, 6, 1, 2, 1, 161, 0, 2)).setObjects(*(("T11-FC-RSCN-MIB", "t11FcRscnRejectedRequestSource"), ("T11-FC-RSCN-MIB", "t11FcRscnRejectReasonCodeExp"), ("T11-FC-RSCN-MIB", "t11FcRscnRejectReasonVendorCode"), ("T11-FC-RSCN-MIB", "t11FcRscnRejectReasonCode"), ("T11-FC-RSCN-MIB", "t11FcRscnRejectedRequestString"), ) )
if mibBuilder.loadTexts: t11FcRscnIlsRejectReqNotify.setDescription("This notification is generated when a switch rejects\nan SW_RSCN.\n\nThe value of t11FcRscnRejectedRequestString indicates the\nbinary content of the rejected request if available, or\nthe zero-length string otherwise.  The source of the\nrejected request is given by t11FcRscnRejectedRequestSource,\nand the reason for rejection is given by the values of\nt11FcRscnRejectReasonCode, t11FcRscnRejectReasonCodeExp\nand t11FcRscnRejectReasonVendorCode.")

# Groups

t11FcRscnRegistrationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 161, 2, 2, 1)).setObjects(*(("T11-FC-RSCN-MIB", "t11FcRscnRegType"), ) )
if mibBuilder.loadTexts: t11FcRscnRegistrationGroup.setDescription("A collection of objects for monitoring RSCN\nregistrations.")
t11FcRscnStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 161, 2, 2, 2)).setObjects(*(("T11-FC-RSCN-MIB", "t11FcRscnInChangedAttribRscns"), ("T11-FC-RSCN-MIB", "t11FcRscnOutSwRscns"), ("T11-FC-RSCN-MIB", "t11FcRscnInChangedSwitchRscns"), ("T11-FC-RSCN-MIB", "t11FcRscnOutChangedServiceRscns"), ("T11-FC-RSCN-MIB", "t11FcRscnSwRscnRejects"), ("T11-FC-RSCN-MIB", "t11FcRscnInChangedServiceRscns"), ("T11-FC-RSCN-MIB", "t11FcRscnOutUnspecifiedRscns"), ("T11-FC-RSCN-MIB", "t11FcRscnOutRemovedRscns"), ("T11-FC-RSCN-MIB", "t11FcRscnOutChangedSwitchRscns"), ("T11-FC-RSCN-MIB", "t11FcRscnRscnRejects"), ("T11-FC-RSCN-MIB", "t11FcRscnScrRejects"), ("T11-FC-RSCN-MIB", "t11FcRscnOutRscns"), ("T11-FC-RSCN-MIB", "t11FcRscnOutChangedAttribRscns"), ("T11-FC-RSCN-MIB", "t11FcRscnInRscns"), ("T11-FC-RSCN-MIB", "t11FcRscnInRemovedRscns"), ("T11-FC-RSCN-MIB", "t11FcRscnInScrs"), ("T11-FC-RSCN-MIB", "t11FcRscnInSwRscns"), ("T11-FC-RSCN-MIB", "t11FcRscnInUnspecifiedRscns"), ) )
if mibBuilder.loadTexts: t11FcRscnStatsGroup.setDescription("A collection of objects for collecting RSCN-related\nstatistics.")
t11FcRscnNotifyControlGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 161, 2, 2, 3)).setObjects(*(("T11-FC-RSCN-MIB", "t11FcRscnRejectReasonCodeExp"), ("T11-FC-RSCN-MIB", "t11FcRscnRejectReasonVendorCode"), ("T11-FC-RSCN-MIB", "t11FcRscnIlsRejectNotifyEnable"), ("T11-FC-RSCN-MIB", "t11FcRscnRejectReasonCode"), ("T11-FC-RSCN-MIB", "t11FcRscnRejectedRequestString"), ("T11-FC-RSCN-MIB", "t11FcRscnRejectedRequestSource"), ("T11-FC-RSCN-MIB", "t11FcRscnElsRejectNotifyEnable"), ) )
if mibBuilder.loadTexts: t11FcRscnNotifyControlGroup.setDescription("A collection of notification control and\nnotification information objects.")
t11FcRscnNotifyGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 161, 2, 2, 4)).setObjects(*(("T11-FC-RSCN-MIB", "t11FcRscnIlsRejectReqNotify"), ("T11-FC-RSCN-MIB", "t11FcRscnElsRejectReqNotify"), ) )
if mibBuilder.loadTexts: t11FcRscnNotifyGroup.setDescription("A collection of notifications for monitoring\nILS and ELS rejections by the RSCN module.")

# Compliances

t11FcRscnCompliance = ModuleCompliance((1, 3, 6, 1, 2, 1, 161, 2, 1, 1)).setObjects(*(("T11-FC-RSCN-MIB", "t11FcRscnNotifyControlGroup"), ("T11-FC-RSCN-MIB", "t11FcRscnNotifyGroup"), ("T11-FC-RSCN-MIB", "t11FcRscnStatsGroup"), ("T11-FC-RSCN-MIB", "t11FcRscnRegistrationGroup"), ) )
if mibBuilder.loadTexts: t11FcRscnCompliance.setDescription("The compliance statement for entities that implement\nthis MIB.")

# Exports

# Module identity
mibBuilder.exportSymbols("T11-FC-RSCN-MIB", PYSNMP_MODULE_ID=t11FcRscnMIB)

# Objects
mibBuilder.exportSymbols("T11-FC-RSCN-MIB", t11FcRscnMIB=t11FcRscnMIB, t11FcRscnNotifications=t11FcRscnNotifications, t11FcRscnObjects=t11FcRscnObjects, t11FcRscnRegistrations=t11FcRscnRegistrations, t11FcRscnRegTable=t11FcRscnRegTable, t11FcRscnRegEntry=t11FcRscnRegEntry, t11FcRscnFabricIndex=t11FcRscnFabricIndex, t11FcRscnRegFcId=t11FcRscnRegFcId, t11FcRscnRegType=t11FcRscnRegType, t11FcRscnStats=t11FcRscnStats, t11FcRscnStatsTable=t11FcRscnStatsTable, t11FcRscnStatsEntry=t11FcRscnStatsEntry, t11FcRscnInScrs=t11FcRscnInScrs, t11FcRscnInRscns=t11FcRscnInRscns, t11FcRscnOutRscns=t11FcRscnOutRscns, t11FcRscnInSwRscns=t11FcRscnInSwRscns, t11FcRscnOutSwRscns=t11FcRscnOutSwRscns, t11FcRscnScrRejects=t11FcRscnScrRejects, t11FcRscnRscnRejects=t11FcRscnRscnRejects, t11FcRscnSwRscnRejects=t11FcRscnSwRscnRejects, t11FcRscnInUnspecifiedRscns=t11FcRscnInUnspecifiedRscns, t11FcRscnOutUnspecifiedRscns=t11FcRscnOutUnspecifiedRscns, t11FcRscnInChangedAttribRscns=t11FcRscnInChangedAttribRscns, t11FcRscnOutChangedAttribRscns=t11FcRscnOutChangedAttribRscns, t11FcRscnInChangedServiceRscns=t11FcRscnInChangedServiceRscns, t11FcRscnOutChangedServiceRscns=t11FcRscnOutChangedServiceRscns, t11FcRscnInChangedSwitchRscns=t11FcRscnInChangedSwitchRscns, t11FcRscnOutChangedSwitchRscns=t11FcRscnOutChangedSwitchRscns, t11FcRscnInRemovedRscns=t11FcRscnInRemovedRscns, t11FcRscnOutRemovedRscns=t11FcRscnOutRemovedRscns, t11FcRscnInformation=t11FcRscnInformation, t11FcRscnNotifyControlTable=t11FcRscnNotifyControlTable, t11FcRscnNotifyControlEntry=t11FcRscnNotifyControlEntry, t11FcRscnIlsRejectNotifyEnable=t11FcRscnIlsRejectNotifyEnable, t11FcRscnElsRejectNotifyEnable=t11FcRscnElsRejectNotifyEnable, t11FcRscnRejectedRequestString=t11FcRscnRejectedRequestString, t11FcRscnRejectedRequestSource=t11FcRscnRejectedRequestSource, t11FcRscnRejectReasonCode=t11FcRscnRejectReasonCode, t11FcRscnRejectReasonCodeExp=t11FcRscnRejectReasonCodeExp, t11FcRscnRejectReasonVendorCode=t11FcRscnRejectReasonVendorCode, t11FcRscnConformance=t11FcRscnConformance, t11FcRscnCompliances=t11FcRscnCompliances, t11FcRscnGroups=t11FcRscnGroups)

# Notifications
mibBuilder.exportSymbols("T11-FC-RSCN-MIB", t11FcRscnElsRejectReqNotify=t11FcRscnElsRejectReqNotify, t11FcRscnIlsRejectReqNotify=t11FcRscnIlsRejectReqNotify)

# Groups
mibBuilder.exportSymbols("T11-FC-RSCN-MIB", t11FcRscnRegistrationGroup=t11FcRscnRegistrationGroup, t11FcRscnStatsGroup=t11FcRscnStatsGroup, t11FcRscnNotifyControlGroup=t11FcRscnNotifyControlGroup, t11FcRscnNotifyGroup=t11FcRscnNotifyGroup)

# Compliances
mibBuilder.exportSymbols("T11-FC-RSCN-MIB", t11FcRscnCompliance=t11FcRscnCompliance)
